{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ninew/Documents/GitHub/ywc18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ninew/Documents/GitHub/ywc18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ninew/Documents/GitHub/ywc18/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useState}from'react';import{Select}from'antd';import'./assets/custom-ant.css';import axios from'axios';import{EnvironmentFilled}from'@ant-design/icons';export default function SelectProvinces(_ref){var provice=_ref.provice,setProvice=_ref.setProvice;var Option=Select.Option;function handleChange(value){setProvice(value);}var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];React.useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"https://panjs.com/ywc18.json\");case 2:result=_context.sent;setData(result.data.provinces);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Select,{defaultValue:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(EnvironmentFilled,{}),\"\\u0E1E\\u0E37\\u0E49\\u0E19\\u0E17\\u0E35\\u0E48\\u0E43\\u0E01\\u0E25\\u0E49\\u0E09\\u0E31\\u0E19\"]}),style:{width:140},onChange:handleChange,size:'large',children:data.map(function(data,index){return/*#__PURE__*/_jsx(Option,{value:data,children:data});})})});}","map":{"version":3,"sources":["/Users/ninew/Documents/GitHub/ywc18/src/Select.js"],"names":["React","useState","Select","axios","EnvironmentFilled","SelectProvinces","provice","setProvice","Option","handleChange","value","data","setData","useEffect","fetchData","get","result","provinces","width","map","index"],"mappings":"wlBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,KAAuB,MAAvB,CACA,MAAO,yBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,iBAAT,KAAkC,mBAAlC,CAEA,cAAe,SAASC,CAAAA,eAAT,MAAkD,IAAvBC,CAAAA,OAAuB,MAAvBA,OAAuB,CAAdC,UAAc,MAAdA,UAAc,IACvDC,CAAAA,MADuD,CAC5CN,MAD4C,CACvDM,MADuD,CAE/D,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3BH,UAAU,CAACG,KAAD,CAAV,CACD,CAJ8D,cAKvCT,QAAQ,CAAC,EAAD,CAL+B,wCAKxDU,IALwD,eAKlDC,OALkD,eAM/DZ,KAAK,CAACa,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,SAAS,2FAAG,oKACKX,CAAAA,KAAK,CAACY,GAAN,CACnB,8BADmB,CADL,QACVC,MADU,eAIhBJ,OAAO,CAACI,MAAM,CAACL,IAAP,CAAYM,SAAb,CAAP,CAJgB,sDAAH,kBAATH,CAAAA,SAAS,2CAAf,CAOAA,SAAS,GACV,CATD,CASG,EATH,EAUA,mBACE,sCACE,KAAC,MAAD,EAAQ,YAAY,cAAE,oCAAK,KAAC,iBAAD,IAAL,0FAAtB,CAAsE,KAAK,CAAE,CAAEI,KAAK,CAAE,GAAT,CAA7E,CAA6F,QAAQ,CAAET,YAAvG,CAAqH,IAAI,CAAE,OAA3H,UACGE,IAAI,CAACQ,GAAL,CAAS,SAACR,IAAD,CAAOS,KAAP,qBACR,KAAC,MAAD,EAAQ,KAAK,CAAET,IAAf,UAAsBA,IAAtB,EADQ,EAAT,CADH,EADF,EADF,CAYD","sourcesContent":["import React, { useState } from 'react';\nimport { Select } from 'antd';\nimport './assets/custom-ant.css'\nimport axios from 'axios'\nimport { EnvironmentFilled } from '@ant-design/icons'\n\nexport default function SelectProvinces({ provice, setProvice }) {\n  const { Option } = Select;\n  function handleChange(value) {\n    setProvice(value)\n  }\n  const [data, setData] = useState([]);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\n        \"https://panjs.com/ywc18.json\",\n      );\n      setData(result.data.provinces);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <>\n      <Select defaultValue={<div><EnvironmentFilled />พื้นที่ใกล้ฉัน</div>} style={{ width: 140 }} onChange={handleChange} size={'large'}>\n        {data.map((data, index) =>\n          <Option value={data}>{data}</Option>\n        )}\n\n      </Select>\n\n\n    </>\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}